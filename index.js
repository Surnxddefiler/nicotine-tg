const TelegramBot = require("node-telegram-bot-api");

const token = "6110612220:AAHIuT4MPFWyahCy8FOcTRrHx0USSUAvS4I";

const bot = new TelegramBot(token, { polling: true });

bot.on("message", async (msg) => {
  if (msg && msg.error && msg.error.code === 403) {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞");
    return; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
  }

  const chatId = msg.chat.id;
  const text = msg.text;
  if (
    text === "/start" &&
    (msg.from.id === 951800184 ||
      msg.from.id === 862045681 ||
      msg.from.id === 5078137410)
  ) {
    await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, ${msg.from.first_name} ! üëã`, {
      reply_markup: {
        keyboard: [
          [
            {
              text: "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
              web_app: { url: "https://marvelous-kheer-25e032.netlify.app" },
            },
          ],
          [
            {
              text: "–ê–¥–º–∏–Ω",
              web_app: {
                url: "https://marvelous-kheer-25e032.netlify.app" + "/admin",
              },
            },
          ],
        ],
        resize_keyboard: true,
      },
    });
  } else if (text === "/start") {
    await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, ${msg.from.first_name} ! üëã`, {
      reply_markup: {
        keyboard: [
          [
            {
              text: "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
              web_app: { url: "https://marvelous-kheer-25e032.netlify.app" },
            },
          ],
        ],
        resize_keyboard: true,
      },
    });
  }
  if (msg.web_app_data) {
    try {
      const data = JSON.parse(msg.web_app_data.data);
      console.log(data.novaPoshta);
      await bot.sendMessage(
        chatId,
        `–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω, –∫—É—Ä—å–µ—Ä - @nctnprdct –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è ‚úÖ \n \n–í–∞—à –∑–∞–∫–∞–∑ :\n${
          data.val.phone
        } ${data.novaPoshta ? "" : `\n${data.val.time}`} \n${
          !data.novaPoshta
            ? data.place
            : `–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–π –ø–æ—á—Ç–æ–π \n${data.val.name} \n${data.val.town} \n${data.val.compartment}`
        }  ${data.cart.map((el, i) => {
          if (el.isPod === "–ú–ù–û–ì–û–†–ê–ó–ö–ò") {
            return `\n${el.name} `;
          } else if (el.isPod === "–ö–ê–†–¢–†–ò–î–ñ–ò") {
            return `\n${el.name} ${el.nicotine} `;
          } else {
            return `\n${el.mark} ${el.name} ${el.nicotine} `;
          }
        })}`
      );

      await bot.sendMessage(
        -623730102,
        `\n${data.novaPoshta ? "–ù–æ–≤–∞—è –ü–æ—á—Ç–∞" : data.val.time} \n${
          data.val.phone
        } \n${
          data.novaPoshta
            ? `${data.val.name} \n${data.val.town} ${data.val.compartment}`
            : data.place
        } \n${
          msg.from.username ? `@${msg.from.username}` : `-`
        } ${data.cart.map((el, i) => {
          if (el.isPod === "–ú–ù–û–ì–û–†–ê–ó–ö–ò") {
            return `\n${el.name} `;
          } else if (el.isPod === "–ö–ê–†–¢–†–ò–î–ñ–ò") {
            return `\n${el.name} ${el.nicotine} `;
          } else {
            return `\n${el.mark} ${el.name} ${el.nicotine} `;
          }
        })}`
      );
    } catch {}
  }
});
